(()=>{"use strict";class e{constructor(e,a){this.suit=e,this.rank=a}}class a{constructor(){this.cards=[]}createDeck(){const a=["C","D","H","S"],s=["2","3","4","5","6","7","8","9","10","J","Q","K","A"];for(let r=0;r<a.length;r++)for(let t=0;t<s.length;t++)this.cards.push(new e(a[r],s[t]))}deal(){return this.cards.splice(Math.floor(Math.random()*this.cards.length),1)[0]}}class s{constructor(e){this.playerName=e,this.playerCards=[]}addCard(e){this.playerCards.push(e)}calcTotal(){let e=0,a=!1;for(let s=0;s<this.playerCards.length;s++){let r=this.playerCards[s];"A"===r.rank?a=!0:"J"===r.rank||"Q"===r.rank||"K"===r.rank?e+=10:e+=Number(r.rank)}return a&&(e+=e+11<=21?11:1),e}}class r{constructor(){this.players=[],this.deck=[]}start(e,r,t){const n=new s(e),d=new s(r);this.players.push(n),this.players.push(d);let l=new a;l.createDeck(),this.deck=l;for(let e=0;e<t;e++)n.addCard(l.deal()),d.addCard(l.deal());this.players.forEach((e=>{this.renderInitialHands(e)})),console.log("start:\n",n,d),console.log("remaining cards: ",l)}suitIcon(e){let a;switch(e){case"H":a="&#9829;";break;case"D":a="&#9830;";break;case"S":a="&#9824;";break;case"C":a="&#9827;"}return a}renderInitialHands(e){const a=document.querySelector(".dealerHand"),s=document.querySelector(".playerHand");let r=e.playerCards,t=e.playerName;""==!s.innerHTML&&""==!a.innerHTML&&(s.innerHTML="",a.innerHTML="");for(let n=0;n<r.length;n++){let d=!1;const l=document.createElement("div");l.classList.add("cardHolder");let i=r[n].suit,c=r[n].rank;"Dealer"===e.playerName&&0===n&&(d=!0),l.appendChild(this.renderCard(i,c,d)),"Dealer"===t?a.appendChild(l):s.appendChild(l)}}newCard(e){const a=document.createElement("div"),s=document.querySelector(".dealerHand"),r=document.querySelector(".playerHand"),t=e.playerName,n=this.deck.deal(),d=n.suit,l=n.rank;a.classList.add("cardHolder"),e.addCard(n),a.appendChild(this.renderCard(d,l)),"Dealer"===t?s.appendChild(a):r.appendChild(a)}renderCard(e,a,s){const r=document.createElement("div"),t=document.createElement("div");if(1==s&&r.classList.add("flipCard","in_animation",e,a),r.classList.add("card","in_animation",e,a),"A"===a||"K"===a||"Q"===a||"J"===a)r.innerHTML="A"===a?`<div class="card-value-suit top"> <span>${a}</span> <span>${this.suitIcon(e)}</span></div>\n                        <div class="card-suit ${e} ${a}"> ${this.suitIcon(e)} </div>\n                        <div class="card-value-suit bot"><span>${a}</span> <span>${this.suitIcon(e)}</span></div>`:`<div class="card-value-suit top"> <span>${a}</span> <span>${this.suitIcon(e)}</span></div>\n                        <div class="card-suit ${a}"> ${a} </div>\n                        <div class="card-value-suit bot"><span>${a}</span> <span>${this.suitIcon(e)}</span></div>`;else{t.classList.add("card-suit",a),r.innerHTML=`<div class="card-value-suit top"> <span>${a}</span> <span>${this.suitIcon(e)}</span></div>`;for(let s=0;s<Number(a);s++)t.innerHTML+=`<span>${this.suitIcon(e)}</span>`;r.appendChild(t),r.innerHTML+=`<div class="card-value-suit bot"> <span>${a}</span> <span>${this.suitIcon(e)}</span></div>`}return r}decideWinner(){const e=this.players[0],a=this.players[1],s=e.calcTotal(),r=a.calcTotal();21===s&&r<21?console.log("decide winner, player wins!: ",s,r):21===s&&21===r?console.log("decide winner, Push."):s>r?console.log("decide winner, player wins!: ",s,r):s<r&&console.log("decide winner, dealer wins!: ",s,r)}}!function(){const e=document.querySelector(".deal"),a=document.querySelector(".hit"),s=document.querySelector(".stay"),t=document.querySelector(".reDeal"),n=document.querySelector(".gameArea"),d=document.querySelector(".scoreArea"),l=document.querySelector(".dealerHand"),i=document.querySelector(".playerHand"),c=document.querySelector(".headArea");let o,u,p,h,y,m=0,L=0;function v(){c.classList.add("hiddenArea"),a.disabled=!1,s.disabled=!1,a.classList.remove("greyOut"),s.classList.remove("winButton"),s.classList.remove("greyOut"),i.innerHTML="",l.innerHTML="",n.classList.remove("hiddenArea"),n.classList.add("gameArea"),t.classList.add("hiddenArea"),o=new r,o.start("Player","Dealer",2),u=o.players[0],p=o.players[1],h=u.calcTotal(),y=p.calcTotal(),console.log(u.playerName+" hand score: "+h),console.log(p.playerName+" hand score: "+y),21===h&&y<21?(d.innerHTML="Natural 21! You win!",a.disabled=!0,a.classList.add("greyOut"),s.classList.add("greyOut"),s.disabled=!0,t.classList.remove("hiddenArea"),g(),m+=1):d.innerHTML=`Player current score: ${h}`,n.scrollIntoView({behavior:"smooth",block:"end"})}function T(e,r){s.disabled=!0,a.disabled=!0;let t=e.calcTotal(),n=r.calcTotal();return a.classList.add("greyOut"),s.classList.add("greyOut"),t>21&&n>21?"Both players bust":t>21?(m+=1,"Dealer wins with: "+n+" vs "+t):n>21?(L+=1,"Player 1 wins with: "+t+" vs "+n):t>n?(m+=1,"Player 1 wins with: "+t+" vs "+n):n>t?(L+=1,"Dealer wins with: "+n+" vs "+t):"Tie"}function g(){for(console.log("dealers turn",p,p.calcTotal()),document.querySelector(".flipCard").classList.remove("flipCard");p.calcTotal()<17||p.calcTotal<u.calcTotal;)o.newCard(p);console.log("dealers score: ",p.calcTotal())}n.classList.remove("gameArea"),n.classList.add("hiddenArea"),e.addEventListener("click",v),t.addEventListener("click",v),a.addEventListener("click",(()=>{o.newCard(u),h=u.calcTotal(),21===h?(a.disabled=!0,a.classList.add("greyOut"),s.disabled=!0,s.classList.add("greyOut"),t.classList.remove("hiddenArea"),g(),d.innerHTML="Blackjack! -- "+T(u,p)):h>21?(document.querySelector(".flipCard").classList.remove("flipCard"),a.disabled=!0,a.classList.add("greyOut"),s.classList.add("greyOut"),s.disabled=!0,t.classList.remove("hiddenArea"),T(u,p),d.innerHTML=`You bust with ${h}! Dealer wins with ${p.calcTotal()}!`):d.innerHTML=`Your current score: ${h}`})),s.addEventListener("click",(()=>{a.disabled=!0,a.classList.add("greyOut"),g();let e=T(u,p);d.innerHTML=e,t.classList.remove("hiddenArea")}))}()})();